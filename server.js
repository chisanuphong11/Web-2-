const express = require('express');
const path = require('path');
const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json());
app.use(express.static('public')); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå HTML, CSS, JS

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç (‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
let gifts = [
    { id: 1, name: "‡∏´‡∏π‡∏ü‡∏±‡∏á‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢", category: "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", price: 1500 },
    { id: 2, name: "‡∏™‡∏°‡∏∏‡∏î‡πÇ‡∏ô‡πâ‡∏ï‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÜ", category: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô", price: 150 },
    { id: 3, name: "‡πÅ‡∏Å‡πâ‡∏ß‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥", category: "‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ", price: 350 },
    { id: 4, name: "‡∏Ç‡∏ô‡∏°‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡πá‡∏Å", category: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£", price: 200 },
    { id: 5, name: "‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ô‡∏∏‡πà‡∏°‡∏ü‡∏π", category: "‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô", price: 450 },
    { id: 6, name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏õ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏ï‡πä‡∏∞", category: "‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á", price: 120 },
    { id: 7, name: "‡∏™‡∏≤‡∏¢‡∏ä‡∏≤‡∏£‡πå‡∏à‡πÄ‡∏£‡πá‡∏ß", category: "‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", price: 250 },
    { id: 8, name: "‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤‡∏™‡∏µ‡∏™‡∏ß‡∏¢", category: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô", price: 180 },
    { id: 9, name: "‡∏û‡∏ß‡∏á‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏•‡∏≤‡∏¢‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å", category: "‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á", price: 80 },
    { id: 10, name: "‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö! üéÅ", category: "‡∏û‡∏¥‡πÄ‡∏®‡∏©", price: 999 }
];

let nextId = 11;

// Routes

// GET - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
app.get('/api/gifts', (req, res) => {
    res.json({
        success: true,
        message: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: gifts,
        total: gifts.length
    });
});

// GET - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ï‡∏≤‡∏° ID
app.get('/api/gifts/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const gift = gifts.find(g => g.id === id);
    
    if (!gift) {
        return res.status(404).json({
            success: false,
            message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£'
        });
    }
    
    res.json({
        success: true,
        message: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: gift
    });
});

// GET - ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç
app.get('/api/gifts/random/pick', (req, res) => {
    if (gifts.length === 0) {
        return res.status(404).json({
            success: false,
            message: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÉ‡∏´‡πâ‡∏™‡∏∏‡πà‡∏°'
        });
    }
    
    const randomGift = gifts[Math.floor(Math.random() * gifts.length)];
    res.json({
        success: true,
        message: '‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: randomGift
    });
});

// POST - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÉ‡∏´‡∏°‡πà
app.post('/api/gifts', (req, res) => {
    const { name, category, price } = req.body;
    
    // Validation
    if (!name || !category || price === undefined) {
        return res.status(400).json({
            success: false,
            message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (name, category, price)'
        });
    }
    
    if (typeof price !== 'number' || price < 0) {
        return res.status(400).json({
            success: false,
            message: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0'
        });
    }
    
    const newGift = {
        id: nextId++,
        name: name.trim(),
        category: category.trim(),
        price: price
    };
    
    gifts.push(newGift);
    
    res.status(201).json({
        success: true,
        message: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: newGift
    });
});

// PUT - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç
app.put('/api/gifts/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const { name, category, price } = req.body;
    
    const giftIndex = gifts.findIndex(g => g.id === id);
    
    if (giftIndex === -1) {
        return res.status(404).json({
            success: false,
            message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç'
        });
    }
    
    // Validation
    if (!name || !category || price === undefined) {
        return res.status(400).json({
            success: false,
            message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (name, category, price)'
        });
    }
    
    if (typeof price !== 'number' || price < 0) {
        return res.status(400).json({
            success: false,
            message: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0'
        });
    }
    
    gifts[giftIndex] = {
        id: id,
        name: name.trim(),
        category: category.trim(),
        price: price
    };
    
    res.json({
        success: true,
        message: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: gifts[giftIndex]
    });
});

// DELETE - ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç
app.delete('/api/gifts/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const giftIndex = gifts.findIndex(g => g.id === id);
    
    if (giftIndex === -1) {
        return res.status(404).json({
            success: false,
            message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö'
        });
    }
    
    const deletedGift = gifts.splice(giftIndex, 1)[0];
    
    res.json({
        success: true,
        message: '‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: deletedGift
    });
});

// ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å - ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå HTML
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Error handling middleware
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({
        success: false,
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå'
    });
});

// 404 handler
app.use((req, res) => {
    res.status(404).json({
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£'
    });
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
app.listen(PORT, () => {
    console.log(`üéÅ Gift Server ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà http://localhost:${PORT}`);
    console.log(`üìã API Endpoints:`);
    console.log(`   GET    /api/gifts          - ‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î`);
    console.log(`   GET    /api/gifts/:id      - ‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏ï‡∏≤‡∏° ID`);
    console.log(`   GET    /api/gifts/random/pick - ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç`);
    console.log(`   POST   /api/gifts          - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÉ‡∏´‡∏°‡πà`);
    console.log(`   PUT    /api/gifts/:id      - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç`);
    console.log(`   DELETE /api/gifts/:id      - ‡∏•‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç`);
});

module.exports = app;